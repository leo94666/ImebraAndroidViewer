/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class Tag {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Tag(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Tag obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_Tag(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Tag(Tag source) {
    this(imebraJNI.new_Tag(Tag.getCPtr(source), source), true);
  }

  public long getBuffersCount() {
    return imebraJNI.Tag_getBuffersCount(swigCPtr, this);
  }

  public boolean bufferExists(long bufferId) {
    return imebraJNI.Tag_bufferExists(swigCPtr, this, bufferId);
  }

  public long getBufferSize(long bufferId) {
    return imebraJNI.Tag_getBufferSize(swigCPtr, this, bufferId);
  }

  public ReadingDataHandler getReadingDataHandler(long bufferId) {
    return new ReadingDataHandler(imebraJNI.Tag_getReadingDataHandler(swigCPtr, this, bufferId), true);
  }

  public ReadingDataHandlerNumeric getReadingDataHandlerNumeric(long bufferId) {
    return new ReadingDataHandlerNumeric(imebraJNI.Tag_getReadingDataHandlerNumeric(swigCPtr, this, bufferId), true);
  }

  public ReadingDataHandlerNumeric getReadingDataHandlerRaw(long bufferId) {
    return new ReadingDataHandlerNumeric(imebraJNI.Tag_getReadingDataHandlerRaw(swigCPtr, this, bufferId), true);
  }

  public StreamReader getStreamReader(long bufferId) {
    return new StreamReader(imebraJNI.Tag_getStreamReader(swigCPtr, this, bufferId), true);
  }

  public DataSet getSequenceItem(long dataSetId) {
    return new DataSet(imebraJNI.Tag_getSequenceItem(swigCPtr, this, dataSetId), true);
  }

  public boolean sequenceItemExists(long dataSetId) {
    return imebraJNI.Tag_sequenceItemExists(swigCPtr, this, dataSetId);
  }

  public tagVR_t getDataType() {
    return tagVR_t.swigToEnum(imebraJNI.Tag_getDataType(swigCPtr, this));
  }

}
