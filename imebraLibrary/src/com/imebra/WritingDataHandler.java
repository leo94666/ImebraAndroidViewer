/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class WritingDataHandler {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected WritingDataHandler(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WritingDataHandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_WritingDataHandler(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public WritingDataHandler(WritingDataHandler source) {
    this(imebraJNI.new_WritingDataHandler(WritingDataHandler.getCPtr(source), source), true);
  }

  public void setSize(long elementsNumber) {
    imebraJNI.WritingDataHandler_setSize(swigCPtr, this, elementsNumber);
  }

  public long getSize() {
    return imebraJNI.WritingDataHandler_getSize(swigCPtr, this);
  }

  public tagVR_t getDataType() {
    return tagVR_t.swigToEnum(imebraJNI.WritingDataHandler_getDataType(swigCPtr, this));
  }

  public void setInt32(long index, int value) {
    imebraJNI.WritingDataHandler_setInt32(swigCPtr, this, index, value);
  }

  public void setSignedLong(long index, int value) {
    imebraJNI.WritingDataHandler_setSignedLong(swigCPtr, this, index, value);
  }

  public void setUint32(long index, long value) {
    imebraJNI.WritingDataHandler_setUint32(swigCPtr, this, index, value);
  }

  public void setUnsignedLong(long index, long value) {
    imebraJNI.WritingDataHandler_setUnsignedLong(swigCPtr, this, index, value);
  }

  public void setInt16(long index, short value) {
    imebraJNI.WritingDataHandler_setInt16(swigCPtr, this, index, value);
  }

  public void setUint16(long index, int value) {
    imebraJNI.WritingDataHandler_setUint16(swigCPtr, this, index, value);
  }

  public void setInt8(long index, byte value) {
    imebraJNI.WritingDataHandler_setInt8(swigCPtr, this, index, value);
  }

  public void setUint8(long index, short value) {
    imebraJNI.WritingDataHandler_setUint8(swigCPtr, this, index, value);
  }

  public void setDouble(long index, double value) {
    imebraJNI.WritingDataHandler_setDouble(swigCPtr, this, index, value);
  }

  public void setFloat(long index, float value) {
    imebraJNI.WritingDataHandler_setFloat(swigCPtr, this, index, value);
  }

  public void setString(long index, String value) {
    imebraJNI.WritingDataHandler_setString(swigCPtr, this, index, value);
  }

  public void setUnicodeString(long index, SWIGTYPE_p_std__wstring value) {
    imebraJNI.WritingDataHandler_setUnicodeString(swigCPtr, this, index, SWIGTYPE_p_std__wstring.getCPtr(value));
  }

  public void setDate(long index, Date date) {
    imebraJNI.WritingDataHandler_setDate(swigCPtr, this, index, Date.getCPtr(date), date);
  }

  public void setAge(long index, Age age) {
    imebraJNI.WritingDataHandler_setAge(swigCPtr, this, index, Age.getCPtr(age), age);
  }

  public void setPatientName(long index, PatientName patientName) {
    imebraJNI.WritingDataHandler_setPatientName(swigCPtr, this, index, PatientName.getCPtr(patientName), patientName);
  }

}
