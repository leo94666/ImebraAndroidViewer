/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class MutableTag extends Tag {
  private transient long swigCPtr;

  protected MutableTag(long cPtr, boolean cMemoryOwn) {
    super(imebraJNI.MutableTag_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MutableTag obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_MutableTag(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public MutableTag(MutableTag source) {
    this(imebraJNI.new_MutableTag(MutableTag.getCPtr(source), source), true);
  }

  public WritingDataHandler getWritingDataHandler(long bufferId) {
    return new WritingDataHandler(imebraJNI.MutableTag_getWritingDataHandler(swigCPtr, this, bufferId), true);
  }

  public WritingDataHandlerNumeric getWritingDataHandlerNumeric(long bufferId) {
    return new WritingDataHandlerNumeric(imebraJNI.MutableTag_getWritingDataHandlerNumeric(swigCPtr, this, bufferId), true);
  }

  public WritingDataHandlerNumeric getWritingDataHandlerRaw(long bufferId) {
    return new WritingDataHandlerNumeric(imebraJNI.MutableTag_getWritingDataHandlerRaw(swigCPtr, this, bufferId), true);
  }

  public StreamWriter getStreamWriter(long bufferId) {
    return new StreamWriter(imebraJNI.MutableTag_getStreamWriter(swigCPtr, this, bufferId), true);
  }

  public MutableDataSet appendSequenceItem() {
    return new MutableDataSet(imebraJNI.MutableTag_appendSequenceItem(swigCPtr, this), true);
  }

  public void setStream(long bufferId, FileStreamInput streamInput) {
    imebraJNI.MutableTag_setStream(swigCPtr, this, bufferId, FileStreamInput.getCPtr(streamInput), streamInput);
  }

}
