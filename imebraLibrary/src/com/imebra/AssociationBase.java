/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.imebra;

public class AssociationBase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AssociationBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AssociationBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        imebraJNI.delete_AssociationBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public AssociationMessage getCommand() {
    return new AssociationMessage(imebraJNI.AssociationBase_getCommand(swigCPtr, this), true);
  }

  public AssociationMessage getResponse(int messageId) {
    return new AssociationMessage(imebraJNI.AssociationBase_getResponse(swigCPtr, this, messageId), true);
  }

  public void sendMessage(AssociationMessage messageDataSet) {
    imebraJNI.AssociationBase_sendMessage(swigCPtr, this, AssociationMessage.getCPtr(messageDataSet), messageDataSet);
  }

  public void release() {
    imebraJNI.AssociationBase_release(swigCPtr, this);
  }

  public void abort() {
    imebraJNI.AssociationBase_abort(swigCPtr, this);
  }

  public String getThisAET() {
    return imebraJNI.AssociationBase_getThisAET(swigCPtr, this);
  }

  public String getOtherAET() {
    return imebraJNI.AssociationBase_getOtherAET(swigCPtr, this);
  }

  public String getTransferSyntax(String abstractSyntax) {
    return imebraJNI.AssociationBase_getTransferSyntax(swigCPtr, this, abstractSyntax);
  }

  public StringsList getTransferSyntaxes(String abstractSyntax) {
    return new StringsList(imebraJNI.AssociationBase_getTransferSyntaxes(swigCPtr, this, abstractSyntax), true);
  }

}
